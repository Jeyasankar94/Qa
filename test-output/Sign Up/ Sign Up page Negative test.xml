<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="34" hostname="MSI" failures="1" tests="1" name=" Sign Up page Negative test" time="46.49" errors="0" timestamp="2024-01-26T07:17:04 IST">
  <testcase classname="org.testpackage.TC001_Signup" name="signUpWithExistingUserEmailAddress" time="42.797">
    <failure type="org.openqa.selenium.TimeoutException" message="Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator &amp;apos;By.xpath: //span[text()=&amp;apos;Email address already exists. Please try a different one.&amp;apos;]&amp;apos; (tried for 30 second(s) with 500 milliseconds interval)">
      <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //span[text()='Email address already exists. Please try a different one.']' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at org.pageclasspackage.SignUp.displayValidationMessageInEmailForExistingUser(SignUp.java:392)
at org.testpackage.TC001_Signup.signUpWithExistingUserEmailAddress(TC001_Signup.java:660)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[text()='Email address already exists. Please try a different one.']"}
  (Session info: MicrosoftEdge=120.0.2210.144)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.12.1', revision: '8e34639b11'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.18'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [aeb59e261fa7241a6f64a4f20ea6778a, findElement {using=xpath, value=//span[text()='Email address already exists. Please try a different one.']}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 120.0.2210.144, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:52009}, msedge: {msedgedriverVersion: 120.0.2210.144 (cbca972d598..., userDataDir: C:\Users\JEYASA~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52009/devtoo..., se:cdpVersion: 120.0.2210.144, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: aeb59e261fa7241a6f64a4f20ea6778a
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy27.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:37)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
... 30 more
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- signUpWithExistingUserEmailAddress -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringOnlyNumbersInPassword" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringOnlyNumbersInPassword -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringEmailAddressWithoutDomainName" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringEmailAddressWithoutDomainName -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringTheEmailidWithDomainNameDotNet" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringTheEmailidWithDomainNameDotNet -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringAlphaNumericCharacterInFirstAndLastnameFields" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringAlphaNumericCharacterInFirstAndLastnameFields -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringEmailAddressWithTailingDotOperators" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringEmailAddressWithTailingDotOperators -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringEmailAddressWithTwoAtSymbols" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringEmailAddressWithTwoAtSymbols -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringSpecialCharactersInMobileNumberField" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringSpecialCharactersInMobileNumberField -->
  <testcase classname="org.testpackage.TC001_Signup" name="signUpAfterFifthTimeWithSameEmail" time="0.0">
    <ignored/>
  </testcase> <!-- signUpAfterFifthTimeWithSameEmail -->
  <testcase classname="org.testpackage.TC001_Signup" name="testSpaceCountedAsACharacterButNotAtTheBeginningAndEndofThePassword" time="0.0">
    <ignored/>
  </testcase> <!-- testSpaceCountedAsACharacterButNotAtTheBeginningAndEndofThePassword -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringTheEmailidWithDomainNameDotOrg" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringTheEmailidWithDomainNameDotOrg -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringSpaceBetweenEachAlphabetsInFirstAndLastnameFields" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringSpaceBetweenEachAlphabetsInFirstAndLastnameFields -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringCountryName" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringCountryName -->
  <testcase classname="org.testpackage.TC001_Signup" name="testLabels" time="0.0">
    <ignored/>
  </testcase> <!-- testLabels -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringOnlySpecialCharactersInFirstAndLastnameFields" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringOnlySpecialCharactersInFirstAndLastnameFields -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringZeroAtInitialPlaceInMobileNumberField" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringZeroAtInitialPlaceInMobileNumberField -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringAlphaNumericBeforeDomainInEmailAddressField" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringAlphaNumericBeforeDomainInEmailAddressField -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringDotOperatorBetweenNameInFirstAndLastnameFields" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringDotOperatorBetweenNameInFirstAndLastnameFields -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringOnlyNumbersInEmailAddressField" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringOnlyNumbersInEmailAddressField -->
  <testcase classname="org.testpackage.TC001_Signup" name="testLessThanMinimumCharacterLimitationInSignupFields" time="0.0">
    <ignored/>
  </testcase> <!-- testLessThanMinimumCharacterLimitationInSignupFields -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringSameNameInFirstAndLastnameFields" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringSameNameInFirstAndLastnameFields -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringNumbersInFirstAndLastnameFields" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringNumbersInFirstAndLastnameFields -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringtenZerosInMobileNumberField" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringtenZerosInMobileNumberField -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringOnlySpecialCharactersInPassword" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringOnlySpecialCharactersInPassword -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringTheBlankSpaceBetweenMobileNumber" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringTheBlankSpaceBetweenMobileNumber -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringTheEmailidWithDomainNameDotIn" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringTheEmailidWithDomainNameDotIn -->
  <testcase classname="org.testpackage.TC001_Signup" name="testMinimumCharacterLimitationInSignupFields" time="0.0">
    <ignored/>
  </testcase> <!-- testMinimumCharacterLimitationInSignupFields -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringOnlyAlphabetsInPassword" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringOnlyAlphabetsInPassword -->
  <testcase classname="org.testpackage.TC001_Signup" name="signUpWithSameEmailForFiveTimes" time="0.0">
    <ignored/>
  </testcase> <!-- signUpWithSameEmailForFiveTimes -->
  <testcase classname="org.testpackage.TC001_Signup" name="testGreaterThanMaximumCharacterLimitationInSignupFields" time="0.0">
    <ignored/>
  </testcase> <!-- testGreaterThanMaximumCharacterLimitationInSignupFields -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringEmailAddressWithoutDotOperator" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringEmailAddressWithoutDotOperator -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringEmailAddressWithoutAtSymbol" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringEmailAddressWithoutAtSymbol -->
  <testcase classname="org.testpackage.TC001_Signup" name="testByEnteringCobinationOfAllCharactersInPassword" time="0.0">
    <ignored/>
  </testcase> <!-- testByEnteringCobinationOfAllCharactersInPassword -->
  <testcase classname="org.testpackage.TC001_Signup" name="testMaximumCharacterLimitationInSignupFields" time="0.0">
    <ignored/>
  </testcase> <!-- testMaximumCharacterLimitationInSignupFields -->
  <testcase classname="org.testpackage.TC001_Signup" name="signUpForMissingFieldAndValidData" time="0.0">
    <ignored/>
  </testcase> <!-- signUpForMissingFieldAndValidData -->
</testsuite> <!--  Sign Up page Negative test -->
