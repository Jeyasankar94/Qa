<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="MSI" failures="0" tests="17" name="Default test" time="0.108" errors="0" timestamp="2023-11-14T11:20:04 IST">
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.022">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: E:\usr\lib\chromium-browser\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: E:\usr\lib\chromium-browser\chromedriver
at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)
at org.basepackage.VisionBaseClass.launch(VisionBaseClass.java:150)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@BeforeMethod launch" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launch -->
  <testcase classname="org.basepackage.VisionBaseClass" name="@AfterMethod checkStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkStatus -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testBannerTextOfResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testBannerTextOfResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testPresenceOfDocumentInResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPresenceOfDocumentInResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testTitleOfDocumentInResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testTitleOfDocumentInResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testPresenceOfYearAndMediumInResearchAndAnalysisPageDocument" time="0.0">
    <skipped/>
  </testcase> <!-- testPresenceOfYearAndMediumInResearchAndAnalysisPageDocument -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testLikeCountInResearchAndAnalysisPageDocument" time="0.001">
    <skipped/>
  </testcase> <!-- testLikeCountInResearchAndAnalysisPageDocument -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testLikeCountOfDocumentAtBeforeUserLoginInResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testLikeCountOfDocumentAtBeforeUserLoginInResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testLikeCountBeforeUserLoginInResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testLikeCountBeforeUserLoginInResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testDownloadCountOfDocumentBeforeUserLoginInResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testDownloadCountOfDocumentBeforeUserLoginInResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testUserCanShareThePageLinkViaWhatsappOfResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testUserCanShareThePageLinkViaWhatsappOfResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testUserCanShareThePageLinkViaFacebookOfResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testUserCanShareThePageLinkViaFacebookOfResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testUserCanShareThePageLinkViaGmailOfResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testUserCanShareThePageLinkViaGmailOfResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testUserCanShareThePageLinkViaTelegramOfResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testUserCanShareThePageLinkViaTelegramOfResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testFilterFunctionalityOfResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testFilterFunctionalityOfResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testClearFilterOptionResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testClearFilterOptionResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testDownloadCountOfDocumentAfterUserLoginInResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testDownloadCountOfDocumentAfterUserLoginInResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testLikeCountAfterUserLoginInResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testLikeCountAfterUserLoginInResearchAndAnalysisPage -->
  <testcase classname="org.testpackage.TC390_ResearchAndAnalysisTest" name="testPaginationInResearchAndAnalysisPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPaginationInResearchAndAnalysisPage -->
</testsuite> <!-- Default test -->
